version: '3.25'

services:
  bot:
    build:
      context: ./bot/
      dockerfile: Dockerfile
    image: bot_image
    environment:
      TOKEN: ${TOKEN}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
    volumes:
      - db-logs:/db-logs
    depends_on:
      - database
      - db_repls

  database:
    env_file:
      - .env
    build:
      context: ./db/
      dockerfile: Dockerfile
      args:
        DB_REPL_USER: ${DB_REPL_USER}
        DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
    restart: always
    volumes:
      - db-logs:/var/lib/postgres/log
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      #PGDATA: /var/lib/postgresql/data/123
      POSTGRES_HOST_AUTH_METHOD: "trust\n host replication all 0.0.0.0/0 trust\n host all user 0.0.0.0/0 trust\n host all,replication all 0.0.0.0/0 trust"
    command: >
      bash -c "chown -R postgres:postgres /var/lib/postgres/log && \
      docker-entrypoint.sh postgres -c wal_level=replica \
      -c hot_standby=on \
      -c max_wal_senders=10 \
      -c max_replication_slots=10 \
      -c hot_standby_feedback=on \
      -c max_connections=100 \
      -c wal_log_hints=on \
      -c archive_command='cp %p /oracle/pg_data/archive/%f' \
      -c log_replication_commands=on \
      -c listen_addresses='*' \
      -c logging_collector=on \
      -c log_directory='/var/lib/postgres/log'"
    ports:
      - "${DB_PORT}:5432"




  db_repls:
    build:
      context: ./db_repl/
      dockerfile: Dockerfile
    image: db_repl_image
    ports:
      - ${DB_REPL_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup -R -h ${DB_HOST} -U ${DB_REPL_USER} -D /var/lib/postgresql/data
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 700 /var/lib/postgresql/data
      su postgres -c 'exec /usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/data'
      postgres
      "
    depends_on:
      - database


volumes:
  db-logs:
    driver: local

